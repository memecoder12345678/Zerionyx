load "libs.time"
load "libs.sys"

N = 1000000
repeats = 10
times = []

for r = 1 to repeats + 1 do
    total = 0
    start = time.time()
    for i = 1 to N + 1 do
        total += i
    done
    end = time.time()
    append(times, end - start)
done

let sum = 0
let fastest = (times$0)
let slowest = (times$0)

for t in times do
    sum += t
    if t < fastest do
        fastest = t
    done
    if t > slowest do
        slowest = t
    done
done

avg = sum / to_float(len(times))

println("Average: " + to_str(avg)     + " s")
println("Fastest: " + to_str(fastest) + " s")
println("Slowest: " + to_str(slowest) + " s")


# Zerionyx executed on PyPy 3.11 (v7.3.19, 64-bit, JIT disabled) on AMD Ryzen 7 4800H laptop (plugged-in mode):
# Average: 40.49288308620453 s
# Fastest: 37.14694356918335 s
# Slowest: 47.98423480987549 s

# Zerionyx executed on Python 3.12.8 (64-bit) on AMD Ryzen 7 4800H laptop (plugged-in mode):
# Average: 8.391884279251098 s
# Fastest: 7.623247623443604 s
# Slowest: 9.372247695922852 s

# Zerionyx executed on PyPy 3.11 (v7.3.19, 64-bit, JIT enabled) on AMD Ryzen 7 4800H laptop (plugged-in mode):
# Average: 0.7022020578384399 s
# Fastest: 0.6396000385284424 s
# Slowest: 0.8322160243988037 s

