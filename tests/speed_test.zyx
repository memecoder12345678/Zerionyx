load "libs.time"
load "libs.sys"

N = 1000000
Repeats = 10
times = []

for r = 1 to Repeats + 1 do
    total = 0
    start = time.time()
    for i = 1 to N + 1 do
        total += i
    done
    end = time.time()
    append(times, end - start)
done

let sum = 0
let fastest = (times>0)
let slowest = (times>0)

for t in times do
    sum += t
    if t < fastest do
        fastest = t
    done
    if t > slowest do
        slowest = t
    done
done

avg = sum / to_float(len(times), false)

println("Average: " + to_str(avg) + " s")
println("Fastest: " + to_str(fastest) + " s")
println("Slowest: " + to_str(slowest) + " s")
sys.exit(0)


# Zerionyx executed on PyPy 3.11 (v7.3.19, 64-bit, JIT disabled) on Intel Core i5-8250U laptop (plugged-in mode)
#     Average: 38.33161084651947 s
#     Fastest: 37.53442406654358 s
#     Slowest: 39.03928422927856 s

# Zerionyx executed on Python 3.12.8 (64-bit) on Intel Core i5-8250U laptop (plugged-in mode)
#     Average: 6.603876042366028 s
#     Fastest: 6.456980466842651 s
#     Slowest: 6.765600681304932 s

# Zerionyx executed on PyPy 3.11 (v7.3.19, 64-bit, JIT enabled) on Intel Core i5-8250U laptop (plugged-in mode):
#     Average: 0.3975654602050781 s
#     Fastest: 0.3619201183319092 s
#     Slowest: 0.4779665470123291 s

