# libs.memory

load "libs.list"
load "libs.string"

mem_ = []

defun remember(k, v)
    for i = 0 to len(mem_) do 
        pair = mem_.i
        if pair.0 == k do 
            change_value(pair, 1, v)
            return none
        done
    done
    append(mem_, [k, v])
    return none
done

defun recall(k)
    for i = 0 to len(mem_) do
        pair = mem_.i
        if pair.0 == k do
            return pair.1
        done
    done
    return none
done

defun forget(k)
    i = 0
    while i < len(mem_) do
        pair = mem_.i
        if pair.0 == k do
            pop(mem_, i)
        else
            i = i + 1
        done
    done
    return none
done

defun clear_memory()
    clear_list(mem_)
    return none
done

defun keys()
    l = []
    for i = 0 to len(mem_) do
        append(l, mem_.i.0)
    done
    return l
done

defun is_empty()
    return len(mem_) == 0
done

defun size()
    return len(mem_)
done
