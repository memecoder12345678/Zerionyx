# libs.termcolor

load "libs.string"

color_map = [
    ['black', 30], ['red', 31], ['green', 32], ['yellow', 33],
    ['blue', 34], ['magenta', 35], ['cyan', 36], ['white', 37]
]
bg_map = [
    ['on_black', 40], ['on_red', 41], ['on_green', 42], ['on_yellow', 43],
    ['on_blue', 44], ['on_magenta', 45], ['on_cyan', 46], ['on_white', 47]
]
style_map = [
    ['bold', 1], ['underline', 4], ['reverse', 7]
]

defun get_color(name)
    for i = 0 to len(color_map) do
        color = color_map.i
        if color.0 == name do
            return to_str(color.1)
        done
    done
    return ''
done

defun get_bg(name)
    for i = 0 to len(bg_map) do
        bg = bg_map.i
        if bg.0 == name do
            return to_str(bg.1)
        done
    done
    return ''
done

defun get_style(name)
    for i = 0 to len(style_map) do
        style = style_map.i
        if style.0 == name do
            return to_str(style.1)
        done
    done
    return ''
done

defun get_code(c, b, s)
    color_code = ''
    bg_code = ''
    style_code = ''
    if not is_none(c) do
        color_code = get_color(c)
    done
    if not is_none(b) do
        bg_code = get_bg(b)
    done
    if not is_none(s) do
        style_code = get_style(s)
    done
    all_codes = []
    if color_code != '' do
        all_codes = all_codes + [color_code]
    done
    if bg_code != '' do
        all_codes = all_codes + [bg_code]
    done
    if style_code != '' do
        all_codes = all_codes + [style_code]
    done
    return join(';', all_codes)
done

defun cprint(t, c, b, s)
    code_str = get_code(c, b, s)
    if not is_none(code_str) do
        print(chr(27) + '[' + code_str + 'm' + to_str(t) + chr(27) + '[0m')
    else
        print(t)
    done
    return none
done

defun cprintln(t, c, b, s)
    code_str = get_code(c, b, s)
    if not is_none(code_str) do
        println(chr(27) + '[' + code_str + 'm' + to_str(t) + chr(27) + '[0m')
    else
        println(t)
    done
    return none
done
