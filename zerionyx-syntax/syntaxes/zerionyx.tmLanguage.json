{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Zerionyx",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#function-definition"
        },
        {
            "include": "#namespace"
        },
        {
            "include": "#for-in-loop"
        },
        {
            "include": "#hashmap"
        },
        {
            "include": "#list"
        },
        {
            "include": "#member-access"
        },
        {
            "include": "#get-index"
        },
        {
            "include": "#control-flow"
        },
        {
            "include": "#literals"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.number-sign.zerionyx",
                    "match": "#.*$"
                }
            ]
        },
        "literals": {
            "patterns": [
                {
                    "name": "constant.language.zerionyx",
                    "match": "\\b(true|false|none)\\b"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.zerionyx",
                    "match": "\\b(async|await|if||elif|for|while|in|to|step|do|done|return|break|continue|defun|namespace|load|as)\\b"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.zerionyx",
                    "begin": "\"",
                    "end": "\"",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.zerionyx"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.zerionyx"
                        }
                    },
                    "patterns": [
                        {
                            "name": "constant.character.escape.zerionyx",
                            "match": "\\\\(\\\\|\"|n|t|r|f|b|v|a|0|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})"
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.zerionyx",
                    "begin": "'",
                    "end": "'",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.zerionyx"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.zerionyx"
                        }
                    },
                    "patterns": [
                        {
                            "name": "constant.character.escape.zerionyx",
                            "match": "\\\\(\\\\|'|n|t|r|f|b|v|a|0|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})"
                        }
                    ]
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.float.zerionyx",
                    "match": "\\b\\d+\\.\\d+\\b"
                },
                {
                    "name": "constant.numeric.integer.zerionyx",
                    "match": "\\b\\d+\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.assignment.zerionyx",
                    "match": "(=|\\+=|-=|\\*=|/=|//=|%=|\\^=|:|->|\\$)"
                },
                {
                    "name": "keyword.operator.comparison.zerionyx",
                    "match": "(==|<|>|<=|>=|!=)"
                },
                {
                    "name": "keyword.operator.arithmetic.zerionyx",
                    "match": "(\\+|\\-|\\*|/|//|%|\\^)"
                },
                {
                    "name": "keyword.operator.logical.zerionyx",
                    "match": "\\b(and|or|not)\\b"
                },
                {
                    "name": "keyword.operator.member.zerionyx",
                    "match": "\\."
                }
            ]
        },
        "function-definition": {
            "begin": "\\b(defun)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
            "end": "\\b(done)\\b",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.zerionyx"
                },
                "2": {
                    "name": "entity.name.function.zerionyx"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.control.zerionyx"
                }
            },
            "patterns": [
                {
                    "begin": "\\(",
                    "end": "\\)",
                    "patterns": [
                        {
                            "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
                            "name": "variable.parameter.zerionyx"
                        }
                    ]
                },
                {
                    "match": "->",
                    "name": "keyword.operator.return-type.zerionyx"
                },
                {
                    "include": "$self"
                }
            ]
        },
        "namespace": {
            "begin": "\\b(namespace)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
            "end": "\\b(done)\\b",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.zerionyx"
                },
                "2": {
                    "name": "entity.name.namespace.zerionyx"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.control.zerionyx"
                }
            },
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        "for-in-loop": {
            "begin": "\\b(for)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+(in)\\b",
            "end": "\\b(done)\\b",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.zerionyx"
                },
                "2": {
                    "name": "variable.parameter.zerionyx"
                },
                "3": {
                    "name": "keyword.control.zerionyx"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.control.zerionyx"
                }
            },
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        "hashmap": {
            "begin": "\\{",
            "end": "\\}",
            "name": "meta.hashmap.zerionyx",
            "patterns": [
                {
                    "match": ":",
                    "name": "keyword.operator.assignment.zerionyx"
                },
                {
                    "include": "$self"
                }
            ]
        },
        "list": {
            "begin": "\\[",
            "end": "\\]",
            "name": "meta.list.zerionyx",
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        "member-access": {
            "match": "(\\.[a-zA-Z_][a-zA-Z0-9_]*)",
            "captures": {
                "1": {
                    "name": "variable.member.zerionyx"
                }
            }
        },
        "get-index": {
            "begin": "\\(",
            "end": "\\)",
            "patterns": [
                {
                    "match": ">",
                    "name": "keyword.operator.zerionyx"
                },
                {
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
                    "name": "variable.zerionyx"
                },
                {
                    "include": "$self"
                }
            ]
        },
        "control-flow": {
            "patterns": [
                {
                    "name": "meta.control.if.zerionyx",
                    "begin": "\\b(if)\\b",
                    "end": "\\b(done)\\b",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.zerionyx"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "keyword.control.zerionyx"
                        }
                    },
                    "patterns": [
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "meta.loop.for.zerionyx",
                    "begin": "\\b(for)\\b",
                    "end": "\\b(done)\\b",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.zerionyx"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "keyword.control.zerionyx"
                        }
                    },
                    "patterns": [
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "meta.loop.while.zerionyx",
                    "begin": "\\b(while)\\b",
                    "end": "\\b(done)\\b",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.zerionyx"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "keyword.control.zerionyx"
                        }
                    },
                    "patterns": [
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        }
    },
    "scopeName": "source.zerionyx"
}