# libs.file

os_sep = os_sep_fp

defun write(f, m, t)
    if m != "w" and m != "a" do
        panic("Invalid mode for write operation", "F")
    done
    if type(f) != str do
        panic("First argument of 'write' must be a string", "T")
    done
    let f_ = open_fp(f)
    write_fp(f_, m, t)
done

defun read(f)
    if not exists_fp(f) do
        panic("File does not exist", "F")
    done
    if type(f) != str do
        panic("First argument of 'read' must be a string", "T")
    done
    let f_ = open_fp(f)
    return read_fp(f_)
done

defun exists(f)
    return exists_fp(f)
done

defun get_cdir()
    return get_cdir_fp()
done

defun set_cdir(n)
    set_cdir_fp(n)
    return none
done

defun list_dir(d)
    return list_dir_fp(d)
    return none
done

defun make_dir(d)
    mkdir_fp(d)
done

defun remove_file(f)
    remove_fp(f)
    return none
done

defun rename(o, n)
    rename_fp(o, n)
    return none
done

defun remove_dir(d)
    rmtree_fp(d)
    return none
done

defun copy(s, d)
    copy_fp(s, d)
    return none
done

defun is_file(f)
    return is_file_fp(f)
done

defun abs_path(p)
    return abs_path_fp(p)
done

defun base_name(p)
    return base_name_fp(p)
done

defun dir_name(p)
    return dir_name_fp(p)
done
